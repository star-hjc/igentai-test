var langKey = 'English'
const languageConfig = {
    'English': {
        home: {
            radio: 'Radio',
            music: 'Music',
            phone: 'Phone',
            easyConnection: 'EasyConnection',
            setting: 'Setting',
            album: 'Album',
            viedo: 'Video',
            help: 'User Manual'
        },
        // 设置
        setting: {
            vehicle: 'Vehicle',
            bluetooth: 'Bluetooth',
            display: 'Display',
            sound: 'Sound',
            system: 'System'
        },
        // 车辆
        vehicle: {
            doorlock: 'Intelligent car door lock',
            doorlock_back: 'Intelligent car door lock',
            tv_unlock: 'Unlock once power-off',
            tv_lock: 'Auto-lock when driving',
            tv_emergency_light: 'Emergency brake lights up warning lights',
            tv_fortify: 'Security Tips',
            fortify_tv: 'Light and horn',
            fortify_switch_speed_tv: 'Security Tips',
            dialog_confirm_btn: 'Confirm',
            dialog_cancel_btn: 'Cancel',
            fortify_light_tv: 'Light',
            fortify_light_trumpet_tv: 'Light and horn',
            tv_led: 'Instrument settings',
            instrument_back: 'Instrument',
            tv_ight: 'Backlight',
            tv_overspeed_alarm: 'Speeding alarm',
            overspeed_alarm_tv: 'km/h',
            alarm_switch_speed_tv: 'Speeding alarm',
            tv_overspeed_tips: 'Overspeed alarm off',
            tv_fatigue_driving: 'Fatigue driving',
            fatigue_driving_tv: 'hour',
            driving_switch_speed_tv: 'Fatigue driving',
            tv_tired_time_tips: 'Fatigue driving reminder off',
            tv_time: 'Timeset',
            time_back: 'Time',
            time_format: 'Time format',
            /** 包含的时间符号 */
            time_char: 'HR',
            user_def_time: 'Manual calibration time',
            /** 包含的时间符号 */
            user_def_time_char: 'Jan',
            user_def_time_title: 'Manual calibration time',
            language: 'Language',
            stv_en: 'English',
            stv_ru: 'Russia',
            tv_toast: 'Language switching…'
        },
        // 蓝牙
        bluetooth: {
            bluetoothBtn: 'Bluetooth',
            mgs:['Turning off Bluetooth','Turning on Bluetooth'],
            bluetoothName: 'Machine Name',
            mydevice: 'My Devices',
            device_paire_state: ['Connected', 'Disconnected'],
            types: ['Connect device', 'Disconnects'],
            ignore: 'Ignore Device',
            link_mgs: ['BluetoothpairingrequestTopairdevices:', 'Pleaseensurethatthepairingsecretkeydisplayedis:'],
			list_title:'Other Devices',
        },
      	display:{
			
		}
    },
    // 俄罗斯语
    'Russia': {
        home: {
            radio: ''
        },
        setting: {
            vehicle: ''
        }
    }
}

// Home键
await adb.keyevent('3')
// 拖动
await adb.swipe(504, 191, 933, 181, 500)

var radio = (await querySelector("*[resource-id='com.semisky.autolauncher:id/icon_radio']"))?.querySelector("*[resource-id='com.semisky.autolauncher:id/tv_text']")
if (getProp(radio).text !== languageConfig[langKey].home.radio) console.log('首页-收音机[文本错误]：' + getProp(radio).text)


var music = (await querySelector("*[resource-id='com.semisky.autolauncher:id/icon_music']"))?.querySelector("*[resource-id='com.semisky.autolauncher:id/tv_text']")
if (getProp(music).text !== languageConfig[langKey].home.music) console.log('首页-音乐[文本错误]：' + getProp(music).text)

var phone = (await querySelector("*[resource-id='com.semisky.autolauncher:id/icon_phone']"))?.querySelector("*[resource-id='com.semisky.autolauncher:id/tv_text']")
if (getProp(phone).text !== languageConfig[langKey].home.phone) console.log('首页-电话[文本错误]：' + getProp(phone).text)

var easyConnection = (await querySelector("*[resource-id='com.semisky.autolauncher:id/icon_carbit']"))?.querySelector("*[resource-id='com.semisky.autolauncher:id/tv_text']")
if (getProp(easyConnection).text !== languageConfig[langKey].home.easyConnection) console.log('首页-电话[文本错误]：' + getProp(easyConnection).text)

var setting = (await querySelector("*[resource-id='com.semisky.autolauncher:id/icon_setting']"))?.querySelector("*[resource-id='com.semisky.autolauncher:id/tv_text']")
if (getProp(setting).text !== languageConfig[langKey].home.setting) console.log('首页-设置[文本错误]：' + getProp(setting).text)

await adb.swipe(933, 181, 504, 191, 500)

var album = (await querySelector("*[resource-id='com.semisky.autolauncher:id/icon_photo']"))?.querySelector("*[resource-id='com.semisky.autolauncher:id/tv_text']")
if (getProp(album).text !== languageConfig[langKey].home.album) console.log('首页-相册[文本错误]：' + getProp(album).text)

var viedo = (await querySelector("*[resource-id='com.semisky.autolauncher:id/icon_viedo']"))?.querySelector("*[resource-id='com.semisky.autolauncher:id/tv_text']")
if (getProp(viedo).text !== languageConfig[langKey].home.viedo) console.log('首页-视频[文本错误]：' + getProp(viedo).text)

var help = (await querySelector("*[resource-id='com.semisky.autolauncher:id/icon_help']"))?.querySelector("*[resource-id='com.semisky.autolauncher:id/tv_text']")
if (getProp(help).text !== languageConfig[langKey].home.help) console.log('首页-用户手册[文本错误]：' + getProp(help).text)

// 进入设置
// 点击
await adb.tap(1220, 444)
// 等待
await delay(1500)
// 取消可能出现的弹窗
await adb.tap(1235,92)
await delay(2000)
var vehicle = await querySelector("*[resource-id='com.semisky.autosetting:id/btn_car']")
await adb.tap(getXY(vehicle))
if (getProp(vehicle).text !== languageConfig[langKey].setting.vehicle) console.log('设置-车辆[文本错误]：' + getProp(vehicle).text)

var bluetooth = await querySelector("*[resource-id='com.semisky.autosetting:id/btn_bt']")
if (getProp(bluetooth).text !== languageConfig[langKey].setting.bluetooth) console.log('设置-蓝牙[文本错误]：' + getProp(bluetooth).text)

var display = await querySelector("*[resource-id='com.semisky.autosetting:id/btn_light']")
if (getProp(display).text !== languageConfig[langKey].setting.display) console.log('设置-显示[文本错误]：' + getProp(display).text)

var sound = await querySelector("*[resource-id='com.semisky.autosetting:id/btn_sound']")
if (getProp(sound).text !== languageConfig[langKey].setting.sound) console.log('设置-声音[文本错误]：' + getProp(sound).text)

var system = await querySelector("*[resource-id='com.semisky.autosetting:id/btn_system']")
if (getProp(system).text !== languageConfig[langKey].setting.system) console.log('设置-系统[文本错误]：' + getProp(system).text)


var bluetooth = await querySelector("*[resource-id='com.semisky.autosetting:id/btn_bt']")
if (getProp(bluetooth).text !== languageConfig[langKey].setting.bluetooth) console.log('设置-蓝牙[文本错误]：' + getProp(bluetooth).text)

// 划到最顶
await adb.swipe(580, 95, 580, 350, 100)
// 等待
await delay(2000)
var doorlock = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_doorlock']")
if (getProp(doorlock).text !== languageConfig[langKey].vehicle.doorlock) console.log('设置-智能车门锁[文本错误]：' + getProp(doorlock).text)
// 点击
await adb.tap(711, 95)
await delay(2000)
var doorlock_back = await querySelector("*[resource-id='com.semisky.autosetting:id/back']")
if (getProp(doorlock_back).text !== languageConfig[langKey].vehicle.doorlock_back) console.log('设置-智能车门锁-回退[文本错误]：' + getProp(doorlock_back).text)
var tv_unlock = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_unlock']")
if (getProp(tv_unlock).text !== languageConfig[langKey].vehicle.tv_unlock) console.log('设置-智能车门锁-下电解锁[文本错误]：' + getProp(tv_unlock).text)
var tv_lock = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_lock']")
if (getProp(tv_lock).text !== languageConfig[langKey].vehicle.tv_lock) console.log('设置-智能车门锁-行车自动落锁[文本错误]：' + getProp(tv_lock).text)
await adb.tap(getXY(doorlock_back))
await delay(2000)

var tv_emergency_light = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_emergency_light']")
if (getProp(tv_emergency_light).text !== languageConfig[langKey].vehicle.tv_emergency_light) console.log('设置-紧急制动点亮警告灯[文本错误]：' + getProp(tv_emergency_light).text)

var tv_fortify = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_fortify']")
if (getProp(tv_fortify).text !== languageConfig[langKey].vehicle.tv_fortify) console.log('设置-设防提示(左边)[文本错误]：' + getProp(tv_fortify).text)

var fortify_tv = await querySelector("*[resource-id='com.semisky.autosetting:id/fortify_tv']")
if (getProp(fortify_tv).text !== languageConfig[langKey].vehicle.fortify_tv) console.log('设置-设防提示(右边)[文本错误]：' + getProp(fortify_tv).text)
await adb.tap(getXY(tv_fortify))
await delay(2000)
var fortify_switch_speed_tv = await querySelector("*[resource-id='com.semisky.autosetting:id/switch_speed_tv']")
if (getProp(fortify_switch_speed_tv).text !== languageConfig[langKey].vehicle.fortify_switch_speed_tv) console.log('设置-设防提示-标题[文本错误]：' + getProp(fortify_switch_speed_tv).text)

var dialog_confirm_btn = await querySelector("*[resource-id='com.semisky.autosetting:id/dialog_confirm_btn']")
if (getProp(dialog_confirm_btn).text !== languageConfig[langKey].vehicle.dialog_confirm_btn) console.log('设置-设防提示-确定[文本错误]：' + getProp(dialog_confirm_btn).text)

var dialog_cancel_btn = await querySelector("*[resource-id='com.semisky.autosetting:id/dialog_cancel_btn']")
if (getProp(dialog_cancel_btn).text !== languageConfig[langKey].vehicle.dialog_cancel_btn) console.log('设置-设防提示-取消[文本错误]：' + getProp(dialog_cancel_btn).text)

var fortify_light_tv = await querySelector("*[resource-id='com.semisky.autosetting:id/fortify_light_tv']")
if (getProp(fortify_light_tv).text !== languageConfig[langKey].vehicle.fortify_light_tv) console.log('设置-设防提示-灯光[文本错误]：' + getProp(fortify_light_tv).text)

var fortify_light_trumpet_tv = await querySelector("*[resource-id='com.semisky.autosetting:id/fortify_light_trumpet_tv']")
if (getProp(fortify_light_trumpet_tv).text !== languageConfig[langKey].vehicle.fortify_light_trumpet_tv) console.log('设置-设防提示-灯光和鸣笛[文本错误]：' + getProp(fortify_light_trumpet_tv).text)
await adb.tap(getXY(dialog_confirm_btn))
await delay(2000)

var tv_led = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_led']")
if (getProp(tv_led).text !== languageConfig[langKey].vehicle.tv_led) console.log('设置-仪表设置[文本错误]：' + getProp(tv_led).text)
await adb.tap(getXY(tv_led))
await delay(2500)

var instrument_back = await querySelector("*[resource-id='com.semisky.autosetting:id/back']")
if (getProp(instrument_back).text !== languageConfig[langKey].vehicle.instrument_back) console.log('设置-仪表设置-回退[文本错误]：' + getProp(instrument_back).text)

var tv_ight = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_ight']")
if (getProp(tv_ight).text !== languageConfig[langKey].vehicle.tv_ight) console.log('设置-仪表设置-背光[文本错误]：' + getProp(tv_ight).text)

var tv_overspeed_alarm = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_overspeed_alarm']")
if (getProp(tv_overspeed_alarm).text !== languageConfig[langKey].vehicle.tv_overspeed_alarm) console.log('设置-仪表设置-超速报警[文本错误]：' + getProp(tv_overspeed_alarm).text) 

var overspeed_alarm_tv = await querySelector("*[resource-id='com.semisky.autosetting:id/overspeed_alarm_tv']")
if (getProp(overspeed_alarm_tv).text?.indexOf(languageConfig[langKey].vehicle.overspeed_alarm_tv)===-1) console.log('设置-仪表设置-超速报警(右边)[文本错误]：' + getProp(overspeed_alarm_tv).text)  
await adb.tap(getXY(tv_overspeed_alarm))
await delay(2000)

var dialog_confirm_btn = await querySelector("*[resource-id='com.semisky.autosetting:id/dialog_confirm_btn']")
if (getProp(dialog_confirm_btn).text !== languageConfig[langKey].vehicle.dialog_confirm_btn) console.log('设置-仪表设置-超速报警-确定[文本错误]：' + getProp(dialog_confirm_btn).text)

var dialog_cancel_btn = await querySelector("*[resource-id='com.semisky.autosetting:id/dialog_cancel_btn']")
if (getProp(dialog_cancel_btn).text !== languageConfig[langKey].vehicle.dialog_cancel_btn) console.log('设置-仪表设置-超速报警-取消[文本错误]：' + getProp(dialog_cancel_btn).text)

var alarm_switch_speed_tv = await querySelector("*[resource-id='com.semisky.autosetting:id/switch_speed_tv']")
if (getProp(alarm_switch_speed_tv).text !== languageConfig[langKey].vehicle.alarm_switch_speed_tv) console.log('设置-仪表设置-超速报警-标题[文本错误]：' + getProp(alarm_switch_speed_tv).text)

var tv_overspeed_tips = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_overspeed_tips']")
if(tv_overspeed_tips){
  	if (getProp(tv_overspeed_tips).text !== languageConfig[langKey].vehicle.tv_overspeed_tips) console.log('设置-仪表设置-超速报警-超速报警提示已关闭[文本错误]：' + getProp(tv_overspeed_tips).text)
}else{
	await adb.tap(816,75)
	await delay(2000)
	var tv_overspeed_tips = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_overspeed_tips']")
	if (getProp(tv_overspeed_tips).text !== languageConfig[langKey].vehicle.tv_overspeed_tips) console.log('设置-仪表设置-超速报警-超速报警提示已关闭[文本错误]：' + getProp(tv_overspeed_tips).text)
}
await adb.tap(getXY(dialog_confirm_btn))
await delay(2000)

var tv_fatigue_driving = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_fatigue_driving']")
if (getProp(tv_fatigue_driving).text !== languageConfig[langKey].vehicle.tv_fatigue_driving) console.log('设置-仪表设置-疲劳驾驶[文本错误]：' + getProp(tv_fatigue_driving).text)

var fatigue_driving_tv = await querySelector("*[resource-id='com.semisky.autosetting:id/fatigue_driving_tv']")
if (getProp(fatigue_driving_tv).text?.indexOf(languageConfig[langKey].vehicle.fatigue_driving_tv)===-1) console.log('设置-仪表设置-疲劳驾驶(右边)[文本错误]：' + getProp(fatigue_driving_tv).text)
await adb.tap(getXY(tv_fatigue_driving))
await delay(2000)

var dialog_confirm_btn = await querySelector("*[resource-id='com.semisky.autosetting:id/dialog_confirm_btn']")
if (getProp(dialog_confirm_btn).text !== languageConfig[langKey].vehicle.dialog_confirm_btn) console.log('设置-仪表设置-疲劳驾驶-确定[文本错误]：' + getProp(dialog_confirm_btn).text)

var dialog_cancel_btn = await querySelector("*[resource-id='com.semisky.autosetting:id/dialog_cancel_btn']")
if (getProp(dialog_cancel_btn).text !== languageConfig[langKey].vehicle.dialog_cancel_btn) console.log('设置-仪表设置-疲劳驾驶-取消[文本错误]：' + getProp(dialog_cancel_btn).text)

var driving_switch_speed_tv = await querySelector("*[resource-id='com.semisky.autosetting:id/switch_speed_tv']")
if (getProp(driving_switch_speed_tv).text !== languageConfig[langKey].vehicle.driving_switch_speed_tv) console.log('设置-仪表设置-疲劳驾驶-标题[文本错误]：' + getProp(driving_switch_speed_tv).text)

var tv_tired_time_tips = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_tired_time_tips']")
if(tv_tired_time_tips){
  	if (getProp(tv_tired_time_tips).text !== languageConfig[langKey].vehicle.tv_tired_time_tips) console.log('设置-仪表设置-超速报警-超速报警提示已关闭[文本错误]：' + getProp(tv_tired_time_tips).text)
}else{
	await adb.tap(816,75)
	await delay(2000)
	var tv_tired_time_tips = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_tired_time_tips']")
	if (getProp(tv_tired_time_tips).text !== languageConfig[langKey].vehicle.tv_tired_time_tips) console.log('设置-仪表设置-超速报警-超速报警提示已关闭[文本错误]：' + getProp(tv_tired_time_tips).text)
}
await adb.tap(getXY(dialog_confirm_btn))
await delay(2000)

await adb.tap(getXY(instrument_back))
await delay(2000)

var tv_time = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_time']")
if (getProp(tv_time).text !== languageConfig[langKey].vehicle.tv_time) console.log('设置-时间设置[文本错误]：' + getProp(tv_time).text)
await adb.tap(getXY(tv_time))
await delay(2000)

var time_back = await querySelector("*[resource-id='com.semisky.autosetting:id/back']")
if (getProp(time_back).text !== languageConfig[langKey].vehicle.time_back) console.log('设置-仪表设置-回退[文本错误]：' + getProp(time_back).text)


var time_format =(await querySelector("*[resource-id='com.semisky.autosetting:id/linearLayout1']"))?.children?.[0]?.children?.[0]
if (getProp(time_format).text !== languageConfig[langKey].vehicle.time_format) console.log('设置-时间设置-时间格式[文本错误]：' + getProp(time_format).text)
var time_12 = await querySelector("*[resource-id='com.semisky.autosetting:id/time_12']")
if (getProp(time_12).text?.indexOf(languageConfig[langKey].vehicle.time_char)===-1) console.log('设置-时间设置-时间格式（12小时制）[文本错误]：' + getProp(time_12).text)
var time_24 = await querySelector("*[resource-id='com.semisky.autosetting:id/time_24']")
if (getProp(time_24).text?.indexOf(languageConfig[langKey].vehicle.time_char)===-1) console.log('设置-时间设置-时间格式（24小时制）[文本错误]：' + getProp(time_24).text)
var user_def_time =(await querySelector("*[resource-id='com.semisky.autosetting:id/linearLayout2']"))?.children?.[0]?.children?.[0]
if (getProp(user_def_time).text !== languageConfig[langKey].vehicle.user_def_time) console.log('设置-时间设置-自定义时间[文本错误]：' + getProp(user_def_time).text)
var tv_time = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_time']")
if (getProp(tv_time).text?.indexOf(languageConfig[langKey].vehicle.user_def_time_char)===-1) console.log('设置-时间设置-时间格式[文本错误]：' + getProp(tv_time).text)
await adb.tap(getXY(tv_time))
await delay(2000)
var user_def_time_title =(await querySelector("*[resource-id='com.semisky.autosetting:id/layoutContent']"))?.children?.[1]?.children?.[0].children?.[0]
if (getProp(user_def_time_title).text !== languageConfig[langKey].vehicle.user_def_time_title) console.log('设置-时间设置-自定义时间-标题[文本错误]：' + getProp(time_back).user_def_time_title)
var dialog_confirm_btn = await querySelector("*[resource-id='com.semisky.autosetting:id/dialog_confirm_btn']")
if (getProp(dialog_confirm_btn).text !== languageConfig[langKey].vehicle.dialog_confirm_btn) console.log('设置-仪表设置-自定义时间-确定[文本错误]：' + getProp(dialog_confirm_btn).text)

var dialog_cancel_btn = await querySelector("*[resource-id='com.semisky.autosetting:id/dialog_cancel_btn']")
if (getProp(dialog_cancel_btn).text !== languageConfig[langKey].vehicle.dialog_cancel_btn) console.log('设置-仪表设置-自定义时间-取消[文本错误]：' + getProp(dialog_cancel_btn).text)
await adb.tap(getXY(dialog_confirm_btn))
await delay(2000)
await adb.tap(getXY(time_back))
await delay(2000)
// 划到最底
await adb.swipe(580, 350,580, 95,  100)
var language = (await querySelector("*[resource-id='com.semisky.autosetting:id/rl_language']"))?.children[0]
if (getProp(language).text !== languageConfig[langKey].vehicle.language) console.log('设置-语言：' + getProp(language).text)
var stv_en = await querySelector("*[resource-id='com.semisky.autosetting:id/stv_en']")
if (getProp(stv_en).text !== languageConfig[langKey].vehicle.stv_en) console.log('设置-语言（英文）[文本错误]：' + getProp(stv_en).text)
var stv_ru = await querySelector("*[resource-id='com.semisky.autosetting:id/stv_ru']")
if (getProp(stv_ru).text !== languageConfig[langKey].vehicle.stv_ru) console.log('设置-语言（俄文）[文本错误]：' + getProp(stv_ru).text)
await adb.tap(getXY(stv_ru))
await delay(500)
var tv_toast = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_toast']")
if (getProp(tv_toast).text !== languageConfig[langKey].vehicle.tv_toast) console.log('设置-语言-切换语言提示[文本错误]：' + getProp(tv_toast).text)
await delay(5000)
await adb.swipe(580, 350,580, 95,  100)
await adb.tap(getXY(stv_en))
await delay(5500)

/**
 * 进入蓝牙
 */
await  adb.tap(getXY(bluetooth))
await delay(2000)
// 划到最顶
await adb.swipe(580, 95, 580, 350, 100)
await delay(2000)

// 划到最顶
await adb.swipe(580, 95, 580, 350, 100)
await delay(2000)
var bluetoothBtnSwitch = await querySelector("*[resource-id='com.semisky.autosetting:id/btOpenSwitch']")
await adb.tap(getXY(bluetoothBtnSwitch))
await delay(1000)
var mgs = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_dialog_message']")
if (languageConfig[langKey].bluetooth.mgs.indexOf(getProp(mgs).text) === -1) console.log('设置-蓝牙-蓝牙开关提示消息[文本错误]：' + getProp(mgs).text)
await delay(5000)
var bluetoothBtnSwitch = await querySelector("*[resource-id='com.semisky.autosetting:id/btOpenSwitch']")
await adb.tap(getXY(bluetoothBtnSwitch))
await delay(1000)
var mgs = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_dialog_message']")
if (languageConfig[langKey].bluetooth.mgs.indexOf(getProp(mgs).text) === -1) console.log('设置-蓝牙-蓝牙开关提示消息[文本错误]：' + getProp(mgs).text)
await delay(5000)
if (languageConfig[langKey].bluetooth.mgs.indexOf(getProp(mgs).text) === 0) {
    var bluetoothBtnSwitch = await querySelector("*[resource-id='com.semisky.autosetting:id/btOpenSwitch']")
    await adb.tap(getXY(bluetoothBtnSwitch))
    await delay(5000)
}

var bluetoothBtn = await querySelector("*[resource-id='com.semisky.autosetting:id/text_wifi']")
if (getProp(bluetoothBtn).text !== languageConfig[langKey].bluetooth.bluetoothBtn) console.log('设置-蓝牙-蓝牙开关[文本错误]：' + getProp(bluetoothBtn).text)

var bluetoothName = await querySelector("*[resource-id='com.semisky.autosetting:id/tvName']")
if (getProp(bluetoothName).text !== languageConfig[langKey].bluetooth.bluetoothName) console.log('设置-蓝牙-自定义蓝牙名称[文本错误]：' + getProp(bluetoothName).text)

var mydevice = await querySelector("*[resource-id='com.semisky.autosetting:id/text_mydevice']")
if (mydevice && getProp(mydevice).text !== languageConfig[langKey].bluetooth.mydevice) console.log('设置-蓝牙-我的设备标题[文本错误]：' + getProp(mydevice).text)
var device_paire_states = await querySelectorAll("*[resource-id='com.semisky.autosetting:id/device_paire_state']")
if (device_paire_states?.length) {
    if (languageConfig[langKey].bluetooth.device_paire_state.indexOf(getProp(device_paire_states?.[0])?.text) === -1) console.log('设置-蓝牙-我的设备(设备连接状态【第1个】[文本错误]：' + getProp(device_paire_states?.[0])?.text)
    if (device_paire_states?.length > 1 && languageConfig[langKey].bluetooth.device_paire_state.indexOf(getProp(device_paire_states?.[0])?.text) === -1) {
        console.log('设置-蓝牙-我的设备(设备连接状态【第2个】[文本错误]：' + getProp(device_paire_states?.[1])?.text)
    }
    await adb.swipe(500, 300, 500, 160, 1500)
    await delay(1500)
    var device_paire_states = await querySelectorAll("*[resource-id='com.semisky.autosetting:id/device_paire_state']")
    await adb.tap(getXY(device_paire_states[0]))
    await delay(1500)
    var connect = await querySelector("*[resource-id='com.semisky.autosetting:id/btn_paire_dv_connect']")
    var disct = await querySelector("*[resource-id='com.semisky.autosetting:id/btn_paire_dv_connect']")
    if (connect || disct) {
        const type = connect || disct
        if (languageConfig[langKey].bluetooth.types.indexOf(getProp(type).text)) console.log('设置-蓝牙-我的设备-设备详情（左边）[文本错误]：' + getProp(type).text)
    }
    var ignore = await querySelector("*[resource-id='com.semisky.autosetting:id/btn_paire_dv_ignore']")
    if (getProp(ignore).text !== languageConfig[langKey].bluetooth.ignore) console.log('设置-蓝牙-我的设备-设备详情（右边）[文本错误]：' + getProp(ignore).text)
    if (device_paire_states.length > 1) {
        await delay(1500)
        var device_paire_states = await querySelectorAll("*[resource-id='com.semisky.autosetting:id/device_paire_state']")
        await adb.tap(getXY(device_paire_states[1]))
        await delay(1500)
        var connect = await querySelector("*[resource-id='com.semisky.autosetting:id/btn_paire_dv_connect']")
        var disct = await querySelector("*[resource-id='com.semisky.autosetting:id/btn_paire_dv_connect']")
        if (connect || disct) {
            const type = connect || disct
            if (languageConfig[langKey].bluetooth.types.indexOf(getProp(type).text)) console.log('设置-蓝牙-我的设备-设备详情（左边）[文本错误]：' + getProp(type).text)
        }
        var ignore = await querySelector("*[resource-id='com.semisky.autosetting:id/btn_paire_dv_ignore']")
        if (getProp(ignore).text !== languageConfig[langKey].bluetooth.ignore) console.log('设置-蓝牙-我的设备-设备详情（右边）[文本错误]：' + getProp(ignore).text)
    }
}

async function get_list_title() {
    const list_title = (await querySelector("*[resource-id='com.semisky.autosetting:id/item_usable_rl']"))?.children[0]
    if (list_title) return list_title
    await adb.swipe(500, 300, 500, 160, 1500)
    return await get_list_title()
}

var list_title = await get_list_title()
if (getProp(list_title).text !== languageConfig[langKey].bluetooth.list_title) console.log('设置-蓝牙-我的设备-可连接列表标题[文本错误]：' + getProp(list_title).text)


async function getrefreshList() {
    const refresh = await querySelector("*[resource-id='com.semisky.autosetting:id/img_usedevice_refresh']")
    await adb.tap(getXY(refresh))
    await delay(5000)
	await adb.swipe(500, 300, 500, 160, 1500)
    await delay(1000)
    const device_item = (await querySelector("*[resource-id='com.semisky.autosetting:id/rv_userdevice']"))?.querySelector("*[resource-id='com.semisky.autosetting:id/device_item_name']")
    if (!device_item) getrefreshList()
    await adb.tap(getXY(device_item))
    await delay(8000)
    const dialog_message = await querySelector("*[resource-id='com.semisky.autosetting:id/tv_dialog_message']")
    const messageText = (getProp(dialog_message).text || '').replaceAll(' ','').replaceAll('\n','')
    if (messageText.indexOf(languageConfig[langKey].bluetooth.link_mgs[0])===-1 || messageText.indexOf(languageConfig[langKey].bluetooth.link_mgs[1])===-1) console.log('设置-蓝牙-连接蓝牙弹出提示[文本错误]：' + getProp(dialog_message).text)
}
await getrefreshList()
await adb.tap(1207,121)
await delay(1000)

/**
 *  进入视频设置
 */
console.log(display);
await adb.tap(getXY(display))
